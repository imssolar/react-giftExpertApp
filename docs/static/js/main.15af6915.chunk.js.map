{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","_ref","setCategories","_useState","useState","_useState2","Object","slicedToArray","inputValue","SetInputValue","react_default","a","createElement","onSubmit","e","preventDefault","trim","length","catego","concat","toConsumableArray","type","value","onChange","target","GifGridItem","img","className","src","url","alt","title","getGifs","asyncToGenerator","regenerator_default","mark","_callee","category","respuesta","_yield$respuesta$json","data","gifs","wrap","_context","prev","next","encodeURI","fetch","sent","json","map","id","images","downsized_medium","abrupt","stop","_x","apply","this","arguments","GifGrid","console","log","_useFetchGifs","loading","state","setState","useEffect","then","imgs","useFetchGifs","Fragment","GifGridItem_GifGridItem","assign","key","GifExpertApp","categories","AddCategory_AddCategory","GifGrid_GifGrid","ReactDOM","render","GifExpertApp_GifExpertApp","document","getElementById"],"mappings":"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","file":"static/js/main.15af6915.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, SetInputValue] = useState('')\r\n\r\n  const handleInputChange = e => {\r\n    SetInputValue(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    if( inputValue.trim().length >2){\r\n        setCategories(catego => [ inputValue,...catego,]);\r\n        SetInputValue('');\r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type='text' value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = (img) => {\r\n    \r\n    \r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown animate__delay-2s\">\r\n            <img src={img.url} alt={img.title}></img>\r\n            <p>{img.title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async (category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=y7ntDgszl4omChPM3Y1ZGVx21JXBndPC`;\r\n    const respuesta = await fetch( url );\r\n    const {data} = await respuesta.json();\r\n\r\n    const gifs=data.map(img=>{\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n//import { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const GifGrid=({category})=>{\r\n\r\n    console.log(\"Category-->\",category)\r\n\r\n    const {data,loading}=useFetchGifs( category );\r\n    \r\n    \r\n    return(\r\n\r\n        <>\r\n        <h3>{category}</h3>\r\n\r\n        {loading && <p>Loading</p>}\r\n        <div className=\"card-grid\">\r\n           {data.map(img=>(\r\n               <GifGridItem key={img.id} {...img}/>\r\n           ))}\r\n        </div>\r\n        \r\n        </>\r\n    );\r\n}","import {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs=( category )=>{\r\n\r\n    const[state,setState]=useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category ).then(imgs=>{\r\n            setState({\r\n                data:imgs,\r\n                loading:false\r\n            })\r\n        })\r\n\r\n\r\n\r\n    } , [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n  //const categories=['One Punch Man','Samurai X','Dragon Ball Z']\r\n  const [categories, setCategories] = useState([\r\n    'One Punch Man'\r\n  ])\r\n\r\n\r\n  const handleAdd=()=>{\r\n    setCategories( [...categories,'Naruto'] );\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory  setCategories={ setCategories }/>\r\n      <hr></hr>\r\n      \r\n      <ol>\r\n        {categories.map(category => \r\n           <GifGrid key={category} category={category}/>\r\n        )}\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}